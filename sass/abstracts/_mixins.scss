@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absolutCentr {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Но  чтобы не делать несколько микснов, которые будут отвечать каждый за свой параметр экрана мы создадим  ОДИН ОГРОМНЫЙ иксин, который будет все это включать в себя

// @mixin respond-phone{
//   // Чтобы вставлять миксину в код мы используем content directive
//   // Это позволяет преобразовать блок кода в миксин
//     // И весь этот код которые будет написан в base, будет вызываться в миксинах в @content здеьс. И этот весь миксин будет встален тут и медиа запрос будет включать в себя весь код ниже который записан в @content,
//   @media (max-width:600px) { @content };
// }

// MEDIA QUERY MANAGER
// Пишем миксины для иедиа запросов

/*
  0 - 600px:     Phone
  600-900px: Tablet portrait
  00-1200px: Tablet landscape
  [1200-1800] is where our normal styles apply
  1800px + : Big desktop
  */

/*
$breakpoint argument choices
- phone
-tab-port
-tab-land
-big-desktop

1em =16 px по дефолту 
*/

// ORDER: Base + typography > general layout + grid > page layout > components

// Для медиа запросов мы будет применять em а не rem , так как он лучше для них подходит

// здесь мы можем применять if
// По ъорошему мы еще должны прописывать only screen and
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    // 600/16 = 37.5 em
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port {
    // 900/16 = 56.25 и далле также ниже
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == big-desktop {
    // Чтобы оказть что на нужно больше 1800 px используем min-width
    @media only screen and (min-width: 112.5em) {
      @content;
    } //1800px
  }
}
